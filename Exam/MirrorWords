import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class MirrorWords {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String input = scanner.nextLine();
        List <String> wordsList = new ArrayList<>();
        int countPairs = 0;
        int countMirrorWord = 0;

        Pattern pattern = Pattern.compile("([@#])(?<first>[A-Za-z]{3,})\\1\\1(?<second>[A-Za-z]{3,})\\1");
        Matcher matcher = pattern.matcher(input);
        while (matcher.find()){
            countPairs++;
            String first = matcher.group("first");
            String second = matcher.group("second");
            if(reverse(second).equals(first)){
                wordsList.add(String.format("%s <=> %s", first, second));
                countMirrorWord++;
            }
        }
        if(countPairs > 0){
            System.out.printf("%d word pairs found!%n", countPairs);
        }else{
            System.out.println("No word pairs found!");
        }
        if(countMirrorWord > 0) {
            System.out.println("The mirror words are:");
            System.out.println(String.join(", ", wordsList));
        }else{
            System.out.println("No mirror words!");
        }
        
    }
    public static String reverse (String word){
        StringBuilder reversedText = new StringBuilder();
            for (int i = word.length()-1; i >= 0; i--) {
                char symbol = word.charAt(i);
                reversedText.append(symbol);
            }
            return reversedText.toString();
    }
}
